# HG changeset patch
# User Burcin Erocal <burcin@erocal.org>
# Date 1308269201 -7200
# Node ID 3037dca14a11c235c48894b600bdb620b1968bac
# Parent  d668124d013b6862f2b40c1c12061f96e0817712
[mq]: trac_11513-is_numerically_zero.patch

diff --git a/sage/symbolic/expression.pyx b/sage/symbolic/expression.pyx
--- a/sage/symbolic/expression.pyx
+++ b/sage/symbolic/expression.pyx
@@ -1572,6 +1572,24 @@
 
     rhs = right = right_hand_side
 
+    def _is_numerically_zero(self):
+        """
+        Provides a fast way to check if this expression is zero.
+
+        EXAMPLES::
+
+            sage: x._is_numerically_zero()
+            False
+            sage: SR(0)._is_numerically_zero()
+            True
+        """
+        #from sage.rings.all import CIF
+        #cdef GEx res
+        #res = self._gobj.evalf(0, CIF)
+        if not is_a_numeric(self._gobj):
+            return False
+        return self._gobj.is_zero()
+
     def __nonzero__(self):
         """
         Return True unless this symbolic expression can be shown by Sage
