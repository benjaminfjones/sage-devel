# HG changeset patch
# User Benjamin Jones <benjaminfjones@gmail.com>
# Date 1329079539 21600
# Node ID ca35b90a1c488ea3827deb4d96fb13ef3614f053
# Parent  426f82c67a1ece819ccca67f3e9cda135bb373f1
Trac 11888: fixes random tests after dependency #9130 is applied

diff --git a/sage/symbolic/random_tests.py b/sage/symbolic/random_tests.py
--- a/sage/symbolic/random_tests.py
+++ b/sage/symbolic/random_tests.py
@@ -20,8 +20,9 @@
         csc, csch, dickman_rho, dilog, dirac_delta, elliptic_e,
         elliptic_ec, elliptic_eu, elliptic_f, elliptic_kc,
         elliptic_pi, erf, exp, factorial, floor, heaviside, imag_part,
-        integrate, kronecker_delta, log, polylog, real_part, sec,
-        sech, sgn, sin, sinh, tan, tanh, unit_step, zeta, zetaderiv]
+        integrate, kronecker_delta, lambert_w_branch, log, polylog,
+        real_part, sec, sech, sgn, sin, sinh, tan, tanh, unit_step,
+        zeta, zetaderiv]
 
     Note that this doctest will fail whenever a Pynac function is added or
     removed.  In that case, it is very likely that the doctests for
@@ -234,17 +235,18 @@
         sage: from sage.symbolic.random_tests import *
         sage: set_random_seed(2)
         sage: random_expr(50, nvars=3, coeff_generator=CDF.random_element)
-        (euler_gamma - v3^(-e) + (v2 - e^(-e/v2))^(((2.85879036573 -
-        1.18163393202*I)*v2 + (2.85879036573 - 1.18163393202*I)*v3)*pi
-        - 0.247786879678 + 0.931826724898*I)*arccsc((0.891138386848 -
+        (euler_gamma - v3^(-e) + (v2 -
+        factorial(-e/v2))^(((2.85879036573 - 1.18163393202*I)*v2 +
+        (2.85879036573 - 1.18163393202*I)*v3)*pi - 0.247786879678 +
+        0.931826724898*I)*arccsc((0.891138386848 -
         0.0936820840629*I)/v1) - (0.553423153995 - 0.5481180572*I)*v3
         + 0.149683576515 - 0.155746451854*I)*v1 + arccsch(pi +
-        e)*elliptic_eu(khinchin*v2, 1.4656989704 + 0.863754357069*I)
+        e)*elliptic_f(khinchin*v2, 1.4656989704 + 0.863754357069*I)
         sage: random_expr(5, verbose=True)
-        About to apply dilog to [1]
+        About to apply dirac_delta to [1]
         About to apply arcsec to [0]
-        About to apply <built-in function add> to [1/6*pi^2, arcsec(0)]
-        1/6*pi^2 + arcsec(0)
+        About to apply <built-in function add> to [0, arcsec(0)]
+        arcsec(0)
     """
     vars = [(1.0, sage.calculus.calculus.var('v%d' % (n+1))) for n in range(nvars)]
     if ncoeffs is None:
